var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
class View {
    _data;
    renderSpinner() {
        const markup = `\n        <div class="spinner">\n            <svg>\n            <use href="${icons}#icon-loader"></use>\n            </svg>\n        </div>\n        `;
        _clearThenInsert(markup, this._parentElement, "afterbegin");
    }
    render(data) {
        this._data = data;
        let markup = this._generateMarkup();
        _clearThenInsert(markup, this._parentElement, "afterbegin");
    }
    renderError(message = this._errorMessage) {
        const markup = `\n      <div class="error">\n        <div>\n          <svg>\n            <use href="${icons}#icon-alert-triangle"></use>\n          </svg>\n        </div>\n        <p>${message}</p>\n      </div>;\n      `;
        this._clearThenInsert(markup, this._parentElement, "afterbegin");
    }
    renderSuccess(message = this._successMessage) {
        const markup = `\n      <div class="message">\n          <div>\n            <svg>\n              <use href="${icons}#icon-smile"></use>\n            </svg>\n          </div>\n          <p>${message}</p>\n        </div>\n        `;
    }
    _clearThenInsert = function(markup, element, position) {
        element.innerHTML = "";
        element.insertAdjacentHTML(position, markup);
    };
}
exports.default = View;

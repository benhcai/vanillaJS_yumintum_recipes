var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "recipe", function () {
  return recipe;
});
var _urlImgIconsSvg = require("url:../img/icons.svg");
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
class Recipe {
  constructor() {}
  render(data) {
    return `
    <figure class="recipe__fig">
      <img src="${data.image}" alt="${data.title}" class="recipe__img" />
      <h1 class="recipe__title">
        <span>${data.title}</span>
      </h1>
    </figure>

    <div class="recipe__details">
      <div class="recipe__info">
        <svg class="recipe__info-icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-clock"></use>
        </svg>
        <span class="recipe__info-data recipe__info-data--minutes">${data.cookingTime}</span>
        <span class="recipe__info-text">minutes</span>
      </div>
      <div class="recipe__info">
        <svg class="recipe__info-icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-users"></use>
        </svg>
        <span class="recipe__info-data recipe__info-data--people">${data.servings} </span>
        <span class="recipe__info-text">SERVINGS</span>

        <div class="recipe__info-buttons">
          <button class="btn--tiny btn--increase-servings">
            <svg>
              <use href="${_urlImgIconsSvgDefault.default}#icon-minus-circle"></use>
            </svg>
          </button>
          <button class="btn--tiny btn--increase-servings">
            <svg>
              <use href="${_urlImgIconsSvgDefault.default}#icon-plus-circle"></use>
            </svg>
          </button>
        </div>
      </div>

      <div class="recipe__user-generated">
        <svg>
          <use href="${_urlImgIconsSvgDefault.default}#icon-user"></use>
        </svg>
      </div>
      <button class="btn--round">
        <svg class="">
          <use href="${_urlImgIconsSvgDefault.default}#icon-bookmark-fill"></use>
        </svg>
      </button>
    </div>

   

    <div class="recipe__directions">
      <h2 class="heading--2">How to cook it</h2>
      <p class="recipe__directions-text">
        This recipe was carefully designed and tested by
        <span class="recipe__publisher">${data.publisher}</span>. Please check out
        directions at their website.
      </p>
      <a
        class="btn--small recipe__btn"
        href="${data.sourceUrl}"
        target="_blank"
      >
        <span>Directions</span>
        <svg class="search__icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-right"></use>
        </svg>
      </a>
    </div>
    `;
  }
}
const myrecipe = {
  id: "5ed6604591c37cdc054bc886",
  title: "Spicy Chicken and Pepper Jack Pizza",
  publisher: "My Baking Addiction",
  sourceUrl: "http://www.mybakingaddiction.com/spicy-chicken-and-pepper-jack-pizza-recipe/",
  image: "http://forkify-api.herokuapp.com/images/FlatBread21of1a180.jpg",
  ingredients: [{
    quantity: 1,
    unit: "",
    description: "tbsp. canola or olive oil"
  }, {
    quantity: 0.5,
    unit: "cup",
    description: "chopped sweet onion"
  }, {
    quantity: 3,
    unit: "cups",
    description: "diced fresh red yellow and green bell peppers"
  }, {
    quantity: 1,
    unit: "",
    description: "tube refrigerated pizza dough"
  }, {
    quantity: 0.5,
    unit: "cup",
    description: "salsa"
  }, {
    quantity: 2,
    unit: "cups",
    description: "sargento chefstyle shredded pepper jack cheese"
  }, {
    quantity: null,
    unit: "",
    description: "Chopped cilantro or dried oregano"
  }],
  servings: 4,
  cookingTime: 45
};
const recipe = new Recipe();
console.log(recipe.render(recipe));

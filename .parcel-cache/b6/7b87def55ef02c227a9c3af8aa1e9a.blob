var _urlImgIconsSvg = require("url:../img/icons.svg");
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
require("core-js/stable");
require("regenerator-runtime/runtime");
var _helper = require("./helper");
const recipeContainer = document.querySelector(".recipe");
const showRecipe = async function () {
  try {
    const id = window.location.hash.slice(1);
    if (!id) throw new Error("ID not found");
    _helper.renderSpinner(recipeContainer);
    // 1. Loading recipe
    let data = await _helper.getRecipe(id);
    let {recipe} = data;
    let myrecipe = {
      id: recipe.id,
      title: recipe.title,
      publisher: recipe.publisher,
      sourceUrl: recipe.source_url,
      image: recipe.image_url,
      ingredients: recipe.ingredients,
      servings: recipe.servings,
      cookingTime: recipe.cooking_time
    };
    // 2. Rendering recipe
    const markup = `
        <figure class="recipe__fig">
          <img src="${myrecipe.image}" alt="${myrecipe.title}" class="recipe__img" />
          <h1 class="recipe__title">
            <span>${myrecipe.title}</span>
          </h1>
        </figure>

        <div class="recipe__details">
          <div class="recipe__info">
            <svg class="recipe__info-icon">
              <use href="${_urlImgIconsSvgDefault.default}#icon-clock"></use>
            </svg>
            <span class="recipe__info-data recipe__info-data--minutes">${myrecipe.cookingTime}</span>
            <span class="recipe__info-text">minutes</span>
          </div>
          <div class="recipe__info">
            <svg class="recipe__info-icon">
              <use href="${_urlImgIconsSvgDefault.default}#icon-users"></use>
            </svg>
            <span class="recipe__info-data recipe__info-data--people">${myrecipe.servings} </span>
            <span class="recipe__info-text">SERVINGS</span>

            <div class="recipe__info-buttons">
              <button class="btn--tiny btn--increase-servings">
                <svg>
                  <use href="${_urlImgIconsSvgDefault.default}#icon-minus-circle"></use>
                </svg>
              </button>
              <button class="btn--tiny btn--increase-servings">
                <svg>
                  <use href="${_urlImgIconsSvgDefault.default}#icon-plus-circle"></use>
                </svg>
              </button>
            </div>
          </div>

          <div class="recipe__user-generated">
            <svg>
              <use href="${_urlImgIconsSvgDefault.default}#icon-user"></use>
            </svg>
          </div>
          <button class="btn--round">
            <svg class="">
              <use href="${_urlImgIconsSvgDefault.default}#icon-bookmark-fill"></use>
            </svg>
          </button>
        </div>

        <div class="recipe__ingredients">
            <h2 class="heading--2">Recipe ingredients</h2>
            <ul class="recipe__ingredient-list">
            ${recipe.ingredients.map(ing => `
                <li class="recipe__ingredient">
                <svg class="recipe__icon">
                    <use href="${_urlImgIconsSvgDefault.default}#icon-check"></use>
                </svg>
                <div class="recipe__quantity">${ing.quantity ? ing.quantity : ""}</div>
                <div class="recipe__description">
                    <span class="recipe__unit">${ing.unit}</span>
                    ${ing.description}
                </div>
                </li>
                `).join("")}
            </ul>
        </div>

        <div class="recipe__directions">
          <h2 class="heading--2">How to cook it</h2>
          <p class="recipe__directions-text">
            This recipe was carefully designed and tested by
            <span class="recipe__publisher">${myrecipe.publisher}</span>. Please check out
            directions at their website.
          </p>
          <a
            class="btn--small recipe__btn"
            href="${myrecipe.sourceUrl}"
            target="_blank"
          >
            <span>Directions</span>
            <svg class="search__icon">
              <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-right"></use>
            </svg>
          </a>
        </div>
        `;
    recipeContainer.innerHTML = "";
    recipeContainer.insertAdjacentHTML("afterbegin", markup);
  } catch (err) {
    console.log(err);
  }
};
["hashchange", "load"].forEach(ev => {
  return window.addEventListener(ev, showRecipe);
});
